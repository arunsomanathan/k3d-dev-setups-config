apiVersion: k3d.io/v1alpha2 # this will change in the future
kind: Simple 
name: arun-k3s # name of the cluster (will still be prefixed with `k3d-`)
servers: 1 # same as `--servers 3`  in k3d cli
agents: 3 # same as `--agents 3`  in k3d cli
kubeAPI: # same as `--api-port k8s.home.in:6443` (where the name would resolve to 192.168.2.100)
  host: "k8s.home.in" # important for the `server` setting in the kubeconfig
  hostIP: "192.168.2.100" # where the Kubernetes API will be listening on
  hostPort: "6443" # where the Kubernetes API listening port will be mapped to on your host system
image: rancher/k3s:latest # same as `--image rancher/k3s:latest` in k3d cli
#network: my-custom-net # same as `--network my-custom-net` in k3d cli
token: superSecretToken # same as `--token superSecretToken` in k3d cli
volumes: # repeatable flags are represented as YAML lists
  - volume: /tmp:/tmp/volume # same as `--volume '/my/host/path:/path/in/node@server[0];agent[*]'`  in k3d cli
    nodeFilters:
      - all
ports:
  - port: 8080:80 # same as `--port '8080:80@loadbalancer'` in k3d cli
    nodeFilters:
      - loadbalancer
  - port: 8443:443 # same as `--port '8443:443@loadbalancer'` in k3d cli
    nodeFilters:
      - loadbalancer
registries: # define how registries should be created or used
  create: true # creates a default registry to be used with the cluster; same as `--registry-create`
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "360s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
    disableHostIPInjection: false # same as `--no-hostip`
  k3s: # options passed on to K3s itself
    extraServerArgs: # additional arguments passed to the `k3s server` command; same as `--k3s-server-arg`
      - --tls-san=k8s.home.in
      - --disable=traefik
    extraAgentArgs: [] # addditional arguments passed to the `k3s agent` command; same as `--k3s-agent-arg`
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)